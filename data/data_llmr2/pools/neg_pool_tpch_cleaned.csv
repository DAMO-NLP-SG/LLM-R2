,db_id,original_sql,rewritten_sql,activated_rules,original_logical_plan
0,tpch,"select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 20 and p_type like '%COPPER' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'AMERICA' and ps_supplycost = ( select min(ps_supplycost) from partsupp, supplier, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'AMERICA' ) order by s_acctbal desc, n_name, s_name, p_partkey;","SELECT t1619.s_acctbal, t1619.s_name, t1619.n_name, t1619.p_partkey, t1619.p_mfgr, t1619.s_address, t1619.s_phone, t1619.s_comment FROM (SELECT t1605.p_partkey, t1605.p_name, t1605.p_mfgr, t1605.p_brand, t1605.p_type, t1605.p_size, t1605.p_container, t1605.p_retailprice, t1605.p_comment, t1605.s_suppkey, t1605.s_name, t1605.s_address, t1605.s_nationkey, t1605.s_phone, t1605.s_acctbal, t1605.s_comment, t1605.ps_partkey, t1605.ps_suppkey, t1605.ps_availqty, t1605.ps_supplycost, t1605.ps_comment, t1605.n_nationkey, t1605.n_name, t1605.n_regionkey, t1605.n_comment, t1605.r_regionkey, t1605.r_name, t1605.r_comment, CAST(t1616.ps_partkey AS INTEGER) AS ps_partkey0, CAST(t1616.EXPR0 AS DECIMAL(19, 0)) AS EXPR0 FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM part WHERE p_size = 20 AND p_type LIKE '%COPPER') AS t1601, supplier AS supplier201, partsupp AS partsupp201 WHERE t1601.p_partkey = partsupp201.ps_partkey AND supplier201.s_suppkey = partsupp201.ps_suppkey) AS t1602, nation AS nation201 WHERE t1602.s_nationkey = nation201.n_nationkey) AS t1603, (SELECT * FROM region WHERE r_name = 'AMERICA') AS t1604 WHERE t1603.n_regionkey = t1604.r_regionkey) AS t1605, (SELECT t1612.ps_partkey, MIN(t1612.EXPR0) AS EXPR0 FROM (SELECT t1609.ps_partkey, t1610.n_regionkey, MIN(t1609.EXPR0) AS EXPR0 FROM (SELECT t1606.ps_partkey, t1607.s_nationkey, MIN(t1606.EXPR0) AS EXPR0 FROM (SELECT ps_partkey, ps_suppkey, MIN(ps_supplycost) AS EXPR0 FROM partsupp GROUP BY ps_partkey, ps_suppkey) AS t1606, (SELECT s_suppkey, s_nationkey FROM supplier GROUP BY s_suppkey, s_nationkey) AS t1607 WHERE t1607.s_suppkey = t1606.ps_suppkey GROUP BY t1606.ps_partkey, t1607.s_nationkey) AS t1609, (SELECT n_nationkey, n_regionkey FROM nation GROUP BY n_nationkey, n_regionkey) AS t1610 WHERE t1609.s_nationkey = t1610.n_nationkey GROUP BY t1609.ps_partkey, t1610.n_regionkey) AS t1612, (SELECT r_regionkey FROM region WHERE r_name = 'AMERICA' GROUP BY r_regionkey) AS t1614 WHERE t1612.n_regionkey = t1614.r_regionkey GROUP BY t1612.ps_partkey) AS t1616 WHERE t1605.p_partkey = t1616.ps_partkey AND t1605.ps_supplycost = t1616.EXPR0 ORDER BY t1605.s_acctbal DESC, t1605.n_name, t1605.s_name, t1605.p_partkey) AS t1619",['Empty List'],"['LogicalSort', ['LogicalProject', ['LogicalProject', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalFilter', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalFilter', 'LogicalTableScan']], ['LogicalAggregate', ['LogicalProject', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalFilter', 'LogicalTableScan']]]]]]]]"
1,tpch,"select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'MACHINERY' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date '1995-03-07' and l_shipdate > date '1995-03-07' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate;","SELECT t1.l_orderkey, SUM(t1.l_extendedprice * (1 - t1.l_discount)) AS revenue, t0.o_orderdate, t0.o_shippriority FROM (SELECT * FROM customer WHERE c_mktsegment = 'MACHINERY') AS t INNER JOIN (SELECT * FROM orders WHERE o_orderdate < DATE '1995-03-07') AS t0 ON t.c_custkey = t0.o_custkey INNER JOIN (SELECT * FROM lineitem WHERE l_shipdate > DATE '1995-03-07') AS t1 ON t0.o_orderkey = t1.l_orderkey GROUP BY t1.l_orderkey, t0.o_orderdate, t0.o_shippriority ORDER BY SUM(t1.l_extendedprice * (1 - t1.l_discount)) DESC, t0.o_orderdate;",['Empty List'],"['LogicalSort', ['LogicalProject', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']]]]]]]"
2,tpch,"select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'EUROPE' and o_orderdate >= date '1994-01-01' and o_orderdate < date '1994-01-01' + interval '1' year group by n_name order by revenue desc;","SELECT nation.n_name, SUM(lineitem.l_extendedprice * (1 - lineitem.l_discount)) AS revenue FROM customer INNER JOIN (SELECT * FROM orders WHERE o_orderdate >= DATE '1994-01-01' AND o_orderdate < (DATE '1994-01-01' + INTERVAL '1' YEAR)) AS t ON customer.c_custkey = t.o_custkey INNER JOIN lineitem ON t.o_orderkey = lineitem.l_orderkey INNER JOIN supplier ON lineitem.l_suppkey = supplier.s_suppkey AND customer.c_nationkey = supplier.s_nationkey INNER JOIN nation ON supplier.s_nationkey = nation.n_nationkey INNER JOIN (SELECT * FROM region WHERE r_name = 'EUROPE') AS t0 ON nation.n_regionkey = t0.r_regionkey GROUP BY nation.n_name ORDER BY SUM(lineitem.l_extendedprice * (1 - lineitem.l_discount)) DESC;",['Empty List'],"['LogicalSort', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalTableScan']]]]]]"
3,tpch,"select o_year, sum(case when nation = 'ROMANIA' then volume else 0 end) / sum(volume) as mkt_share from ( select extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) as volume, n2.n_name as nation from part, supplier, lineitem, orders, customer, nation n1, nation n2, region where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = 'EUROPE' and s_nationkey = n2.n_nationkey and o_orderdate between date '1995-01-01' and date '1996-12-31' and p_type = 'LARGE POLISHED STEEL' ) as all_nations group by o_year order by o_year;","SELECT EXTRACT(YEAR FROM t940.o_orderdate) AS o_year, SUM(CASE WHEN CAST(t940.n_name0 AS CHAR(7)) = 'ROMANIA' THEN t940.l_extendedprice * (1 - t940.l_discount) ELSE 0 END) / SUM(t940.l_extendedprice * (1 - t940.l_discount)) AS mkt_share FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM part WHERE p_type = 'LARGE POLISHED STEEL') AS t934, supplier AS supplier102, lineitem AS lineitem102 WHERE t934.p_partkey = lineitem102.l_partkey AND supplier102.s_suppkey = lineitem102.l_suppkey) AS t935, (SELECT * FROM orders WHERE o_orderdate >= DATE '1995-01-01' AND o_orderdate <= DATE '1996-12-31') AS t936 WHERE t935.l_orderkey = t936.o_orderkey) AS t937, customer AS customer102 WHERE t937.o_custkey = customer102.c_custkey) AS t938, nation AS nation205 WHERE t938.c_nationkey = nation205.n_nationkey) AS t939, nation AS nation206 WHERE t939.s_nationkey = nation206.n_nationkey) AS t940, (SELECT * FROM region WHERE r_name = 'EUROPE') AS t941 WHERE t940.n_regionkey = t941.r_regionkey GROUP BY EXTRACT(YEAR FROM t940.o_orderdate) ORDER BY EXTRACT(YEAR FROM t940.o_orderdate)",['Empty List'],"['LogicalSort', ['LogicalProject', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalTableScan']]]]]]]"
4,tpch,"select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= date '1993-10-01' and o_orderdate < date '1993-10-01' + interval '3' month and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc;","SELECT t742.c_custkey, t742.c_name, SUM(t742.l_extendedprice * (1 - t742.l_discount)) AS revenue, t742.c_acctbal, nation100.n_name, t742.c_address, t742.c_phone, t742.c_comment FROM (SELECT * FROM (SELECT * FROM customer AS customer100, (SELECT * FROM orders WHERE o_orderdate >= DATE '1993-10-01' AND o_orderdate < (DATE '1993-10-01' + INTERVAL '3' MONTH)) AS t739 WHERE customer100.c_custkey = t739.o_custkey) AS t740, (SELECT * FROM lineitem WHERE l_returnflag = 'R') AS t741 WHERE t741.l_orderkey = t740.o_orderkey) AS t742, nation AS nation100 WHERE t742.c_nationkey = nation100.n_nationkey GROUP BY t742.c_custkey, t742.c_name, t742.c_acctbal, t742.c_phone, nation100.n_name, t742.c_address, t742.c_comment ORDER BY SUM(t742.l_extendedprice * (1 - t742.l_discount)) DESC",['Empty List'],"['LogicalSort', ['LogicalProject', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalTableScan']]]]]]]"
5,tpch,"select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 313 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate;","SELECT t95.c_name, t95.c_custkey, t95.o_orderkey, t95.o_orderdate, t95.o_totalprice, t95.f8 FROM (SELECT t93.c_custkey, t93.c_name, t93.o_orderkey, t93.o_totalprice, t93.o_orderdate, t93.f8 * t94.EXPR5 AS f8 FROM (SELECT t91.c_custkey, t91.c_name, t92.o_orderkey, t92.o_totalprice, t92.o_orderdate, t91.f2 * t92.f4 AS f8 FROM (SELECT c_custkey, c_name, COUNT(*) AS f2 FROM customer GROUP BY c_custkey, c_name) AS t91 INNER JOIN (SELECT o_orderkey, o_custkey, o_totalprice, o_orderdate, COUNT(*) AS f4 FROM orders GROUP BY o_orderkey, o_custkey, o_totalprice, o_orderdate) AS t92 ON t91.c_custkey = t92.o_custkey) AS t93 INNER JOIN (SELECT l_orderkey, SUM(l_quantity) AS EXPR5 FROM lineitem GROUP BY l_orderkey) AS t94 ON t93.o_orderkey = t94.l_orderkey) AS t95 INNER JOIN (SELECT l_orderkey FROM lineitem GROUP BY l_orderkey HAVING SUM(l_quantity) > 313) AS t98 ON t95.o_orderkey = t98.l_orderkey ORDER BY t95.o_totalprice DESC, t95.o_orderdate",['Empty List'],"['LogicalSort', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalProject', ['LogicalFilter', ['LogicalAggregate', 'LogicalProject', 'LogicalTableScan']]]]]]]]"
6,tpch,"select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'MOROCCO' group by s_name order by numwait desc, s_name;",,['Empty List'],"['LogicalSort', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', ['LogicalFilter', ['LogicalProject', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalProject', ['LogicalJoin', ['LogicalTableScan'], ['LogicalProject', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalTableScan']]]]]]]], ['LogicalProject', ['LogicalJoin', ['LogicalFilter', 'LogicalTableScan'], ['LogicalProject', ['LogicalFilter', ['LogicalProject', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalTableScan']], ['LogicalProject', ['LogicalJoin', ['LogicalTableScan'], ['LogicalProject', ['LogicalJoin', ['LogicalJoin', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan'], ['LogicalTableScan']], ['LogicalTableScan']]]]]]]]]]]]]]]]"
7,tpch,"select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone from 1 for 2) as cntrycode, c_acctbal from customer where substring(c_phone from 1 for 2) in ('33', '24', '36', '34', '32', '42', '26') and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substring(c_phone from 1 for 2) in ('33', '24', '36', '34', '32', '42', '26') ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as custsale group by cntrycode order by cntrycode;","SELECT SUBSTR(t.c_phone FROM 1 FOR 2) AS cntrycode, COUNT(*) AS numcust, SUM(t.c_acctbal) AS totacctbal FROM (SELECT * FROM customer WHERE SUBSTR(c_phone FROM 1 FOR 2) = '33' OR (SUBSTR(c_phone FROM 1 FOR 2) = '24' OR SUBSTR(c_phone FROM 1 FOR 2) = '36') OR (SUBSTR(c_phone FROM 1 FOR 2) = '34' OR SUBSTR(c_phone FROM 1 FOR 2) = '32' OR (SUBSTR(c_phone FROM 1 FOR 2) = '42' OR SUBSTR(c_phone FROM 1 FOR 2) = '26'))) AS t INNER JOIN (SELECT AVG(c_acctbal) AS EXPR0 FROM customer WHERE c_acctbal > 0.00 AND (SUBSTR(c_phone FROM 1 FOR 2) = '33' OR (SUBSTR(c_phone FROM 1 FOR 2) = '24' OR SUBSTR(c_phone FROM 1 FOR 2) = '36') OR (SUBSTR(c_phone FROM 1 FOR 2) = '34' OR SUBSTR(c_phone FROM 1 FOR 2) = '32' OR (SUBSTR(c_phone FROM 1 FOR 2) = '42' OR SUBSTR(c_phone FROM 1 FOR 2) = '26')))) AS t1 ON t.c_acctbal > t1.EXPR0 LEFT JOIN (SELECT o_custkey, TRUE AS f0 FROM orders) AS t2 ON t.c_custkey = t2.o_custkey WHERE t2.f0 IS NULL GROUP BY SUBSTR(t.c_phone FROM 1 FOR 2) ORDER BY SUBSTR(t.c_phone FROM 1 FOR 2);",['Empty List'],"['LogicalSort', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', ['LogicalJoin', ['LogicalFilter', 'LogicalTableScan'], ['LogicalAggregate', ['LogicalProject', 'LogicalFilter', 'LogicalTableScan']]], ['LogicalProject', 'LogicalTableScan']]]]]]"
8,tpch,"select o_orderpriority, count(*) as order_count from orders where o_orderdate >= date '1993-02-01' and o_orderdate < date '1993-02-01' + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority;","SELECT t0.o_orderpriority, COALESCE(SUM(t0.order_count * t3.order_count), 0) AS order_count FROM (SELECT o_orderkey, o_orderpriority, COUNT(*) AS order_count FROM orders WHERE o_orderdate >= DATE '1993-02-01' AND o_orderdate < (DATE '1993-02-01' + INTERVAL '3' MONTH) GROUP BY o_orderkey, o_orderpriority) AS t0 INNER JOIN (SELECT l_orderkey, COUNT(*) AS order_count FROM lineitem WHERE l_commitdate < l_receiptdate GROUP BY l_orderkey) AS t3 ON t0.o_orderkey = t3.l_orderkey GROUP BY t0.o_orderpriority ORDER BY t0.o_orderpriority;",['Empty List'],"['LogicalSort', ['LogicalAggregate', ['LogicalProject', ['LogicalProject', ['LogicalJoin', ['LogicalFilter', 'LogicalTableScan'], ['LogicalProject', 'LogicalFilter', 'LogicalTableScan']]]]]]"
9,tpch,"select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('AIR', 'SHIP') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date '1997-01-01' and l_receiptdate < date '1997-01-01' + interval '1' year group by l_shipmode order by l_shipmode;","SELECT t.l_shipmode, SUM(CASE WHEN orders.o_orderpriority = '1-URGENT' OR orders.o_orderpriority = '2-HIGH' THEN 1 ELSE 0 END) AS high_line_count, SUM(CASE WHEN orders.o_orderpriority <> '1-URGENT' AND orders.o_orderpriority <> '2-HIGH' THEN 1 ELSE 0 END) AS low_line_count FROM orders INNER JOIN (SELECT * FROM lineitem WHERE l_shipmode IN ('AIR', 'SHIP') AND l_commitdate < l_receiptdate AND l_shipdate < l_commitdate AND l_receiptdate >= DATE '1997-01-01' AND l_receiptdate < (DATE '1997-01-01' + INTERVAL '1' YEAR)) AS t ON orders.o_orderkey = t.l_orderkey GROUP BY t.l_shipmode ORDER BY t.l_shipmode;",['Empty List'],"['LogicalSort', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan']]]]]"
10,tpch,"select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#23' and p_type not like 'LARGE POLISHED%' and p_size in (43, 14, 16, 39, 18, 6, 24, 37) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size;","SELECT p_brand, p_type, p_size, COUNT(ps_suppkey) AS supplier_cnt FROM (SELECT ps_suppkey, p_brand, p_type, p_size FROM (SELECT partsupp.ps_partkey, partsupp.ps_suppkey, partsupp.ps_availqty, partsupp.ps_supplycost, partsupp.ps_comment, part.p_partkey, part.p_name, part.p_mfgr, part.p_brand, part.p_type, part.p_size, part.p_container, part.p_retailprice, part.p_comment, partsupp.ps_suppkey AS ps_suppkey0, t0.s_suppkey, t0.f1 FROM partsupp CROSS JOIN part LEFT JOIN (SELECT s_suppkey, TRUE AS f1 FROM supplier WHERE s_comment LIKE '%Customer%Complaints%') AS t0 ON partsupp.ps_suppkey = t0.s_suppkey) AS t1 WHERE t1.p_partkey = t1.ps_partkey AND t1.p_brand <> 'Brand#23' AND t1.p_type NOT LIKE 'LARGE POLISHED%' AND (t1.p_size = 43 OR t1.p_size = 14 OR (t1.p_size = 16 OR t1.p_size = 39) OR (t1.p_size = 18 OR t1.p_size = 6 OR (t1.p_size = 24 OR t1.p_size = 37))) AND NOT (t1.f1 IS TRUE AND t1.ps_suppkey0 IS NOT NULL) GROUP BY ps_suppkey, p_brand, p_type, p_size) AS t3 GROUP BY p_brand, p_type, p_size ORDER BY COUNT(ps_suppkey) DESC, p_brand, p_type, p_size;",['Empty List'],"['LogicalSort', ['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', ['LogicalProject', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan']], ['LogicalProject', 'LogicalFilter', 'LogicalTableScan']]]]]]"
11,tpch,"select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = 'Brand#53' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 2 and l_quantity <= 2 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#54' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 19 and l_quantity <= 19 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#13' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 25 and l_quantity <= 25 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' );",SELECT SUM(lineitem.l_extendedprice * (1 - lineitem.l_discount)) AS revenue FROM lineitem INNER JOIN part ON lineitem.l_partkey = part.p_partkey AND part.p_brand = 'Brand#53' AND ((part.p_container = 'SM CASE' OR part.p_container = 'SM BOX' OR part.p_container = 'SM PACK' OR part.p_container = 'SM PKG') AND lineitem.l_quantity >= 2) AND (lineitem.l_quantity <= 2 + 10 AND part.p_size >= 1 AND (part.p_size <= 5 AND ((lineitem.l_shipmode = 'AIR' OR lineitem.l_shipmode = 'AIR REG') AND lineitem.l_shipinstruct = 'DELIVER IN PERSON'))) OR lineitem.l_partkey = part.p_partkey AND part.p_brand = 'Brand#54' AND ((part.p_container = 'MED BAG' OR part.p_container = 'MED BOX' OR part.p_container = 'MED PKG' OR part.p_container = 'MED PACK') AND lineitem.l_quantity >= 19) AND (lineitem.l_quantity <= 19 + 10 AND part.p_size >= 1 AND (part.p_size <= 10 AND ((lineitem.l_shipmode = 'AIR' OR lineitem.l_shipmode = 'AIR REG') AND lineitem.l_shipinstruct = 'DELIVER IN PERSON'))) OR lineitem.l_partkey = part.p_partkey AND part.p_brand = 'Brand#13' AND ((part.p_container = 'LG CASE' OR part.p_container = 'LG BOX' OR part.p_container = 'LG PACK' OR part.p_container = 'LG PKG') AND lineitem.l_quantity >= 25) AND (lineitem.l_quantity <= 25 + 10 AND part.p_size >= 1 AND (part.p_size <= 15 AND ((lineitem.l_shipmode = 'AIR' OR lineitem.l_shipmode = 'AIR REG') AND lineitem.l_shipinstruct = 'DELIVER IN PERSON')));,['Empty List'],"['LogicalAggregate', ['LogicalProject', ['LogicalFilter', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan']]]]"
12,tpch,"select c_count, count(*) as custdist from ( select c_custkey, count(o_orderkey) from customer left outer join orders on c_custkey = o_custkey and o_comment not like '%unusual%deposits%' group by c_custkey ) as c_orders (c_custkey, c_count) group by c_count order by custdist desc, c_count desc;","SELECT t2.c_count, COUNT(*) AS custdist FROM (SELECT COUNT(t.o_orderkey) AS c_count FROM customer LEFT JOIN (SELECT * FROM orders WHERE o_comment NOT LIKE '%unusual%deposits%') AS t ON customer.c_custkey = t.o_custkey GROUP BY customer.c_custkey) AS t2 GROUP BY t2.c_count ORDER BY COUNT(*) DESC, t2.c_count DESC;",['Empty List'],"['LogicalSort', ['LogicalAggregate', ['LogicalProject', ['LogicalAggregate', ['LogicalProject', ['LogicalJoin', 'LogicalTableScan', 'LogicalTableScan']]]]]]"